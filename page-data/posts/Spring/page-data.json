{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/Spring",
    "result": {"pageContext":{"currentCategory":"Spring","categories":["All","Java","Spring","Mybatis","Sourcetree"],"edges":[{"node":{"id":"59b8f325-5c4d-5052-8478-48216dd47a2d","excerpt":"이번 시간에는 springboot 에서 log4j2를 설정해보겠습니다. 라이브러리 가져오기 기존 logging 라이브러리 제외하기 스프링에서 제공하는 기본 라이브러리는 사용하지 않을 예정이므로 제외시킵니다.  log4j2 라이브러리 가져오기 다음으로는 log4j2와 slf4j를 위한 라이브러리를 가져오겠습니다. slf4j는 slf4j-impl에 포함되어있으므로 따로 가져오진 않겠습니다. 버전은 작성일 기준 2.17.1 이상을 가져오시길 바랍니다. log4j 취약점 논란이 있었기 때문에 maven repository에서 가져오실 땐 꼭 취약점이 발견되지 않은 버전을 가져오시길 바랍니다.  를 통해 가져오지 않는 이유는 maven repository 사이트의 표기와 달리 2.17.0 버전을 가져오기 때문입니다. yml 설정을 위한 jackson-dataformat-yaml 라이브러리 가져오기 log4j2 설정을 .xml 로 관리해왔지만 이번 프로젝트는 .yml 로 관리해보도록 하겠습니…","fields":{"slug":"/Spring/springboot_start-2-log4j2/"},"frontmatter":{"categories":"Spring","title":"[springboot] Spring Boot project 시작하기, log4j2 + yml","date":"January 09, 2022"}},"next":{"fields":{"slug":"/Spring/springboot_start-4-thymeleaf_layout/"}},"previous":{"fields":{"slug":"/Java/start_gradle_project /start_gradle_project/"}}},{"node":{"id":"9bc156e1-9ce3-5cb9-b5e9-78b60b475440","excerpt":"이번에는 thymeleaf이 layout를 설정하는 방법을 알아보겠습니다. ㅅ\b","fields":{"slug":"/Spring/springboot_start-4-thymeleaf_layout/"},"frontmatter":{"categories":"Spring","title":"[springboot_start] thymeleaf layout 설정","date":"January 09, 2022"}},"next":{"fields":{"slug":"/Spring/springboot_start-3-undertow/"}},"previous":{"fields":{"slug":"/Spring/springboot_start-2-log4j2/"}}},{"node":{"id":"e93e9f50-9432-5506-a6db-bdb4a316aeae","excerpt":"이번 포스팅에서는 기존 WAS를 Tomcat에서 undertow로 변경해보겠습니다. tomcat은 오래전부터 사용된 WAS이나 아쉬운 점이 많아 사용 빈도가 줄고 있다고 합니다. 그래서 undertow로 바꿔보도록 하겠습니다. 라이브러리 가져오기 기존 Tomcat 라이브러리 제외하기 tomcat은 사용하지 않을 예정이므로 제외합니다. undertow 라이브러리 추가 버전은 본인의 상황에 맞게 maven repository 에서 가져오시면 됩니다. 결과 확인 기존 Tomcat 환경  undertow 환경  라이브러리 가져오기 기존 Tomcat 라이브러리 제외하기 undertow 라이브러리 추가 결과 확인 기존 Tomcat 환경 undertow 환경","fields":{"slug":"/Spring/springboot_start-3-undertow/"},"frontmatter":{"categories":"Spring","title":"[springboot_start] 내장 WAS를 undertow로 변경하기","date":"January 09, 2022"}},"next":{"fields":{"slug":"/Spring/springboot_start-1-init_project/"}},"previous":{"fields":{"slug":"/Spring/springboot_start-4-thymeleaf_layout/"}}},{"node":{"id":"6aad5bda-3421-5be8-87b7-7de54d847e55","excerpt":"Spring Boot를 이용하여 새로운 프로젝트를 만들어보도록 하겠습니다. 환경 OS: MacOS 12.1(Monterey) IDE: Intellij(2021.2) language: java 17 project: Gradle project 프로젝트 생성 spring initializr을 이용한 프로젝트 생성 새로운 springboot project를 시작하는 방법은 여러가지가 있지만 이번에는 spring inializr에 접속하여 간단하게 생성해보도록 하겠습니다. Spring initializr 사이트에 접속합니다. Project 환경 선택 Projrect: Gradle Proejct Language: Java Spring Boot: 2.6.2 Packaging: Jar Java: 17 Project Metadata는 각 프로젝트 성격에 맞춰서 작성하면 됩니다. Dependencies는 우측 Add Dependencies 버튼을 클릭하여 추가할 수 있습니다. Dependencies…","fields":{"slug":"/Spring/springboot_start-1-init_project/"},"frontmatter":{"categories":"Spring","title":"[springboot] Spring Boot project 시작하기 1/?","date":"January 09, 2022"}},"next":{"fields":{"slug":"/Mybatis/error-NumberformatException/"}},"previous":{"fields":{"slug":"/Spring/springboot_start-3-undertow/"}}},{"node":{"id":"590b4795-d729-5782-8a96-78a418b4411c","excerpt":"Mybatis를 사용하여 구현하다보면 아래와 같은 에러 문구가 발생하는 경우가 존재합니다. 에러를 보고 유추하면 형 변환 문제로 보이는데, 아무리 찾아봐도 데이터 타입에는 문제가 없다면 SQL 동적 쿼리를 살펴볼 필요가 있습니다. 예제 다음과 같은 동적 쿼리가 존재할 경우 아래와 같이 변경해야 합니다. 설명 해결 방법은 몇 가지 존재하지만 가장 깔끔한 방법은 위와 같이 작은따옴표(”)를 먼저 사용한 뒤 큰따옴표(\"\")를 사용해야 합니다. 해당 오류가 발생하는 이유를 간략히 설명하자면 OGNL(Object Graph Navigation Language)의 문제 때문입니다.\nOGNL인터프리터에서는 ”나 ’?’를 char형으로 인식하고 ’??’나 ”?”는 String으로 인식합니다. 때문에 동적 쿼리의 비교문을 작성할때 NumberFormat으로 비교를 시도하고 해당 에러가 발생하는 것입니다. 결론 \"\"를 쓰는 습관을 들이자.","fields":{"slug":"/Mybatis/error-NumberformatException/"},"frontmatter":{"categories":"Spring Mybatis","title":"[Mybatis] String NumberformatException Error가 나는 경우","date":"January 08, 2022"}},"next":{"fields":{"slug":"/Git/sourcetree-mac_keychain_error/"}},"previous":{"fields":{"slug":"/Spring/springboot_start-1-init_project/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}